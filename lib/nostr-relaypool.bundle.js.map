{
  "version": 3,
  "sources": ["../node_modules/safe-stable-stringify/index.js", "../node_modules/@scure/bip39/wordlists/english.js", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/cryptoBrowser.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/utils.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/pbkdf2.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/sha512.ts", "../node_modules/@scure/base/lib/index.js", "../node_modules/@scure/bip39/index.js", "../index.ts", "../relay-pool.ts", "../merge-similar-filters.ts", "../node_modules/safe-stable-stringify/esm/wrapper.js", "../relay.ts", "../node_modules/nostr-tools/lib/esm/nostr.mjs", "../node_modules/@noble/secp256k1/lib/esm/index.js", "../node_modules/nostr-tools/node_modules/@noble/hashes/esm/sha256.js", "../node_modules/nostr-tools/node_modules/@noble/hashes/esm/_sha2.js", "../node_modules/nostr-tools/node_modules/@noble/hashes/esm/utils.js", "../node_modules/nostr-tools/node_modules/@noble/hashes/esm/cryptoBrowser.js", "../node_modules/@scure/base/lib/esm/index.js", "../node_modules/@scure/bip32/index.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/utils.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/cryptoBrowser.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/ripemd160.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/sha512.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/esm/hmac.js", "../node_modules/isomorphic-ws/browser.js", "../fakejson.ts", "../event-cache.ts", "../event.ts", "../author.ts", "../group-filters-by-relay.ts", "../on-event-filters.ts", "../callback-replayer.ts", "../newest-event-cache.ts", "../collect.ts"],
  "sourcesContent": ["'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?:[^\\ud800-\\udbff]|^)[\\udc00-\\udfff]/\nconst strEscapeSequencesReplacer = new RegExp(strEscapeSequencesRegExp, 'g')\n\n// Escaped special characters. Use empty strings to fill up unused entries.\nconst meta = [\n  '\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004',\n  '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t',\n  '\\\\n', '\\\\u000b', '\\\\f', '\\\\r', '\\\\u000e',\n  '\\\\u000f', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013',\n  '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018',\n  '\\\\u0019', '\\\\u001a', '\\\\u001b', '\\\\u001c', '\\\\u001d',\n  '\\\\u001e', '\\\\u001f', '', '', '\\\\\"',\n  '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '\\\\\\\\'\n]\n\nfunction escapeFn (str) {\n  if (str.length === 2) {\n    const charCode = str.charCodeAt(1)\n    return `${str[0]}\\\\u${charCode.toString(16)}`\n  }\n  const charCode = str.charCodeAt(0)\n  return meta.length > charCode\n    ? meta[charCode]\n    : `\\\\u${charCode.toString(16)}`\n}\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return str\n  }\n  if (str.length > 100) {\n    return str.replace(strEscapeSequencesReplacer, escapeFn)\n  }\n  let result = ''\n  let last = 0\n  for (let i = 0; i < str.length; i++) {\n    const point = str.charCodeAt(i)\n    if (point === 34 || point === 92 || point < 32) {\n      result += `${str.slice(last, i)}${meta[point]}`\n      last = i + 1\n    } else if (point >= 0xd800 && point <= 0xdfff) {\n      if (point <= 0xdbff && i + 1 < str.length) {\n        const nextPoint = str.charCodeAt(i + 1)\n        if (nextPoint >= 0xdc00 && nextPoint <= 0xdfff) {\n          i++\n          continue\n        }\n      }\n      result += `${str.slice(last, i)}\\\\u${point.toString(16)}`\n      last = i + 1\n    }\n  }\n  result += str.slice(last)\n  return result\n}\n\nfunction insertSort (array) {\n  // Insertion sort is very efficient for small input sizes but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2) {\n    return array.sort()\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getBooleanOption(options, 'deterministic')\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return `\"${strEscape(value)}\"`\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(i, value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(i, value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}\"${strEscape(key)}\":${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return `\"${strEscape(value)}\"`\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(i, value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(i, value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}\"${strEscape(key)}\":${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return `\"${strEscape(value)}\"`\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(i, value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(i, value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}\"${strEscape(key)}\": ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return `\"${strEscape(value)}\"`\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(i, value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(i, value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}\"${strEscape(key)}\":${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "// Global symbol available in browsers only\ndeclare const self: Record<string, any> | undefined;\nexport const crypto: { node?: any; web?: any } = {\n  node: undefined,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  // Cleanup internal state. Not '.clean' because instance is not usable after that.\n  // Clean usually resets instance to initial state, but it is not possible for keyed hashes if key is consumed into state.\n  // NOTE: if digest is not consumed by user, user need manually call '.destroy' if zeroing is required\n  abstract destroy(): void;\n  // Unsafe because doesn't check if \"to\" is correct. Can be used as clone() if no opts passed.\n  // Why cloneInto instead of clone? Mostly performance (same as _digestInto), but also has nice property: it reuses instance\n  // which means all internal buffers is overwritten, which also causes overwrite buffer which used for digest (in some cases).\n  // We don't provide any guarantees about cleanup (it is impossible to!), so should be enough for now.\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n", "export * from \"./relay-pool\";\nexport * from \"./author\";\nexport * from \"./collect\";\nexport {emitEventsOnNextTick} from \"./on-event-filters\";\n", "import {Filter, Sub, Event} from \"nostr-tools\";\nimport {mergeSimilarAndRemoveEmptyFilters} from \"./merge-similar-filters\";\nimport {type Relay, relayInit} from \"./relay\";\nimport {OnEventObject, type OnEvent} from \"./on-event-filters\";\nimport {EventCache} from \"./event-cache\";\nimport {EventObject} from \"./event\";\nimport {\n  batchFiltersByRelay,\n  groupFiltersByRelayAndEmitCacheHits,\n} from \"./group-filters-by-relay\";\nimport {CallbackReplayer} from \"./callback-replayer\";\nimport {NewestEventCache} from \"./newest-event-cache\";\n\nconst unique = (arr: string[]) => [...new Set(arr)];\n\nexport {type OnEvent, type OnEventObject} from \"./on-event-filters\";\nexport type OnEose = (relayUrl: string, minCreatedAt: number) => void;\nexport type OnEventAndMetadata = (event: Event, metadata: Event) => void;\nexport type FilterToSubscribe = [\n  onEvent: OnEvent,\n  filtersByRelay: Map<string, Filter[]>,\n  unsub: {unsubcb?: () => void},\n  unsubscribeOnEose?: boolean,\n  subscriptionCacheKey?: string,\n  maxDelayms?: number\n];\n\nexport type SubscriptionOptions = {\n  allowDuplicateEvents?: boolean;\n  allowOlderEvents?: boolean;\n  logAllEvents?: boolean;\n  unsubscribeOnEose?: boolean;\n  defaultRelays?: string[];\n};\n\nfunction parseJSON(json: string | undefined) {\n  if (json) {\n    return JSON.parse(json);\n  }\n}\n\nexport class RelayPool {\n  relayByUrl: Map<string, Relay> = new Map();\n  noticecbs: Array<(url: string, msg: string) => void> = [];\n  eventCache?: EventCache;\n  minMaxDelayms: number = Infinity;\n  filtersToSubscribe: FilterToSubscribe[] = [];\n  timer?: ReturnType<typeof setTimeout>;\n  externalGetEventById?: (id: string) => Event | undefined;\n  logSubscriptions?: boolean = false;\n  autoReconnect?: boolean = false;\n  startTime: number = new Date().getTime();\n  deleteSignatures?: boolean;\n  subscriptionCache?: Map<\n    string,\n    CallbackReplayer<[Event, boolean, string | undefined], OnEvent>\n  >;\n  skipVerification?: boolean;\n  writeRelays: NewestEventCache;\n  metadataCache: NewestEventCache;\n  contactListCache: NewestEventCache;\n\n  constructor(\n    relays?: string[],\n    options: {\n      useEventCache?: boolean;\n      externalGetEventById?: (id: string) => Event | undefined;\n      logSubscriptions?: boolean;\n      autoReconnect?: boolean;\n      subscriptionCache?: boolean;\n      deleteSignatures?: boolean;\n      skipVerification?: boolean;\n    } = {}\n  ) {\n    this.externalGetEventById = options.externalGetEventById;\n    this.logSubscriptions = options.logSubscriptions;\n    this.autoReconnect = options.autoReconnect;\n    this.deleteSignatures = options.deleteSignatures;\n    this.skipVerification = options.skipVerification;\n    this.writeRelays = new NewestEventCache(10003, this, undefined, true);\n    this.metadataCache = new NewestEventCache(0, this);\n    this.contactListCache = new NewestEventCache(3, this);\n    if (options.useEventCache) {\n      this.eventCache = new EventCache();\n    }\n    if (options.subscriptionCache) {\n      this.subscriptionCache = new Map();\n    }\n    if (relays) {\n      for (const relay of unique(relays)) {\n        this.addOrGetRelay(relay);\n      }\n    }\n  }\n\n  addOrGetRelay(relay: string): Relay {\n    const origRelayInstance = this.relayByUrl.get(relay);\n    if (origRelayInstance) {\n      return origRelayInstance;\n    }\n    const relayInstance = relayInit(\n      relay,\n      this.externalGetEventById\n        ? this.externalGetEventById\n        : this.eventCache\n        ? (id) => this.eventCache?.getEventById(id)\n        : undefined,\n      this.autoReconnect\n    );\n    this.relayByUrl.set(relay, relayInstance);\n    relayInstance.connect().then(\n      (onfulfilled) => {\n        relayInstance?.on(\"notice\", (msg: string) => {\n          this.noticecbs.forEach((cb) => cb(relay, msg));\n        });\n      },\n      (onrejected) => {\n        console.warn(\"failed to connect to relay \" + relay);\n      }\n    );\n    return relayInstance;\n  }\n\n  async close() {\n    const promises = [];\n    for (const relayInstance of this.relayByUrl.values()) {\n      promises.push(relayInstance.close());\n    }\n    this.relayByUrl.clear();\n    return Promise.all(promises);\n  }\n\n  removeRelay(url: string) {\n    const relay = this.relayByUrl.get(url);\n    if (relay) {\n      relay.close();\n      this.relayByUrl.delete(url);\n    }\n  }\n\n  #subscribeRelay(\n    relay: string,\n    filters: Filter[],\n    onEvent: OnEvent,\n    onEose?: OnEose,\n    eventIds?: Set<string>\n  ): Sub | undefined {\n    const mergedAndRemovedEmptyFilters =\n      mergeSimilarAndRemoveEmptyFilters(filters);\n    if (mergedAndRemovedEmptyFilters.length === 0) {\n      return;\n    }\n    const instance = this.addOrGetRelay(relay);\n    const sub = instance.sub(mergedAndRemovedEmptyFilters, {\n      skipVerification: this.skipVerification,\n      eventIds,\n    });\n    let afterEose = false;\n    let minCreatedAt = Infinity;\n    sub.on(\"event\", (nostrEvent: Event) => {\n      if (nostrEvent.created_at < minCreatedAt) {\n        minCreatedAt = nostrEvent.created_at;\n      }\n      let event = nostrEvent;\n      if (!this.deleteSignatures) {\n        event.sig = nostrEvent.sig;\n      }\n      this.eventCache?.addEvent(event);\n      onEvent(event, afterEose, relay);\n    });\n    sub.on(\"eose\", () => {\n      onEose?.(relay, minCreatedAt);\n      afterEose = true;\n    });\n\n    return sub;\n  }\n\n  #mergeAndRemoveEmptyFiltersByRelay(\n    filtersByRelay: Map<string, Filter[]>\n  ): Map<string, Filter[]> {\n    const mergedAndRemovedEmptyFiltersByRelay = new Map();\n    for (const [relay, filters] of filtersByRelay) {\n      const mergedAndRemovedEmptyFilters =\n        mergeSimilarAndRemoveEmptyFilters(filters);\n      if (mergedAndRemovedEmptyFilters.length > 0) {\n        mergedAndRemovedEmptyFiltersByRelay.set(\n          relay,\n          mergedAndRemovedEmptyFilters\n        );\n      }\n    }\n    return mergedAndRemovedEmptyFiltersByRelay;\n  }\n\n  #subscribeRelays(\n    filtersByRelay: Map<string, Filter[]>,\n    onEvent: OnEvent,\n    onEose?: OnEose,\n    unsub: {unsubcb?: () => void; unsuboneosecb?: () => void} = {},\n    minMaxDelayms?: number\n  ): () => void {\n    if (filtersByRelay.size === 0) {\n      return () => {};\n    }\n    // Merging here is done to make logging more readable.\n    filtersByRelay = this.#mergeAndRemoveEmptyFiltersByRelay(filtersByRelay);\n    if (this.logSubscriptions) {\n      console.log(\n        \"RelayPool at \",\n        new Date().getTime() - this.startTime,\n        \" subscribing to relays, minMaxDelayms=\",\n        minMaxDelayms,\n        filtersByRelay\n      );\n    }\n    const subs: Sub[] = [];\n    let unsuboneosecbcalled = false;\n    let eoseSubs: Sub[] = [];\n    unsub.unsuboneosecb = () => {\n      unsuboneosecbcalled = true;\n      eoseSubs.forEach((sub) => sub.unsub());\n    };\n    for (const [relay, filters] of filtersByRelay) {\n      let subHolder: {sub?: Sub} = {};\n      const subOnEose: OnEose = (url, minCreatedAt) => {\n        if (onEose) {\n          onEose(url, minCreatedAt);\n        }\n        if (unsuboneosecbcalled) {\n          subHolder.sub?.unsub();\n        } else {\n          if (subHolder.sub) {\n            eoseSubs.push(subHolder.sub);\n          }\n        }\n      };\n\n      const eventIds = new Set<string>();\n\n      const sub = this.#subscribeRelay(\n        relay,\n        filters,\n        onEvent,\n        subOnEose,\n        eventIds\n      );\n      if (sub) {\n        subHolder.sub = sub;\n        subs.push(sub);\n      }\n    }\n    const allUnsub = () => subs.forEach((sub) => sub.unsub());\n    unsub.unsubcb = () => {\n      allUnsub();\n      delete unsub.unsubcb;\n    };\n    return allUnsub;\n  }\n\n  sendSubscriptions(onEose?: OnEose) {\n    clearTimeout(this.timer);\n    this.timer = undefined;\n    let minMaxDelayms = this.minMaxDelayms;\n    this.minMaxDelayms = Infinity;\n\n    const [onEvent, filtersByRelay, unsub]: [\n      OnEvent,\n      Map<string, Filter[]>,\n      {unsubcb?: () => void; unsuboneosecb?: () => void}\n    ] = batchFiltersByRelay(this.filtersToSubscribe, this.subscriptionCache);\n\n    let allUnsub = this.#subscribeRelays(\n      filtersByRelay,\n      onEvent,\n      onEose,\n      unsub,\n      minMaxDelayms // For logging\n    );\n\n    return allUnsub;\n  }\n\n  #resetTimer(maxDelayms: number) {\n    if (this.minMaxDelayms > maxDelayms) {\n      this.minMaxDelayms = maxDelayms;\n    }\n\n    clearTimeout(this.timer);\n    this.timer = undefined;\n\n    if (this.minMaxDelayms !== Infinity) {\n      this.timer = setTimeout(() => {\n        this.sendSubscriptions();\n      }, this.minMaxDelayms);\n    }\n  }\n\n  async #getRelaysAndSubscribe(\n    filters: (Filter & {relay?: string; noCache?: boolean})[],\n    onEvent: OnEvent,\n    maxDelayms?: number,\n    onEose?: OnEose,\n    options: SubscriptionOptions = {}\n  ) {\n    const allAuthors: Set<string> = new Set();\n    for (const filter of filters) {\n      if (filter.authors) {\n        for (const author of filter.authors) {\n          allAuthors.add(author);\n        }\n      } else {\n        if (!options.defaultRelays) {\n          throw new Error(\n            \"Authors must be specified if no relays are subscribed and no default relays are specified.\"\n          );\n        }\n      }\n    }\n    const promises = [];\n    const allAuthorsArray = [];\n    for (const author of allAuthors) {\n      promises.push(\n        this.writeRelays?.get(author).then((event) => parseJSON(event?.content))\n      );\n      allAuthorsArray.push(author);\n    }\n    const allRelays: Set<string> = new Set();\n    let i = 0;\n    for (const promise of promises) {\n      const author = allAuthorsArray[i];\n      i += 1;\n      let relays = await promise;\n      if (!Array.isArray(relays)) {\n        console.error(\"Couldn't load relays for author \", author);\n        continue;\n      }\n      for (let relay of relays) {\n        allRelays.add(relay);\n      }\n    }\n    let allRelaysArray = Array.from(allRelays);\n    if (allRelaysArray.length === 0) {\n      if (options.defaultRelays) {\n        allRelaysArray = options.defaultRelays;\n      }\n    }\n    return this.subscribe(\n      filters,\n      allRelaysArray,\n      onEvent,\n      maxDelayms,\n      onEose,\n      options\n    );\n  }\n\n  subscribeEventObject(\n    filters: (Filter & {relay?: string; noCache?: boolean})[],\n    relays: string[] | undefined,\n    onEventObject: OnEventObject,\n    maxDelayms?: number,\n    onEose?: OnEose,\n    options: SubscriptionOptions = {}\n  ): () => void {\n    return this.subscribe(filters, relays, (event, afterEose, url) =>\n      onEventObject(new EventObject(event, this, relays), afterEose, url)\n    );\n  }\n\n  subscribe(\n    filters: (Filter & {relay?: string; noCache?: boolean})[],\n    relays: string[] | undefined,\n    onEvent: OnEvent,\n    maxDelayms?: number,\n    onEose?: OnEose,\n    options: SubscriptionOptions = {}\n  ): () => void {\n    if (maxDelayms !== undefined && onEose) {\n      throw new Error(\"maxDelayms and onEose cannot be used together\");\n    }\n    if (relays === undefined) {\n      const promise = this.#getRelaysAndSubscribe(\n        filters,\n        onEvent,\n        maxDelayms,\n        onEose,\n        options\n      );\n      return () => {\n        promise.then((x) => {\n          x();\n        });\n      };\n    }\n    let subscriptionCacheKey: string | undefined;\n    if (options.unsubscribeOnEose && !onEose) {\n      subscriptionCacheKey = JSON.stringify([filters, relays]);\n      const cachedSubscription =\n        this.subscriptionCache?.get(subscriptionCacheKey);\n      if (cachedSubscription) {\n        return cachedSubscription.sub(onEvent);\n      }\n    }\n    const [dedupedOnEvent, filtersByRelay] =\n      groupFiltersByRelayAndEmitCacheHits(\n        filters,\n        relays,\n        onEvent,\n        options,\n        this.eventCache\n      );\n    let unsub: {unsubcb?: () => void} = {unsubcb: () => {}};\n    if (\n      maxDelayms === undefined &&\n      onEose &&\n      this.filtersToSubscribe.length > 0\n    ) {\n      this.sendSubscriptions(); // onEose is not yet supported for batched subscriptions\n    }\n    this.filtersToSubscribe.push([\n      dedupedOnEvent,\n      filtersByRelay,\n      unsub,\n      options.unsubscribeOnEose,\n      subscriptionCacheKey,\n      maxDelayms,\n    ]);\n    if (maxDelayms === undefined) {\n      return this.sendSubscriptions(onEose);\n    } else {\n      this.#resetTimer(maxDelayms);\n      return () => {\n        unsub.unsubcb?.();\n        delete unsub.unsubcb;\n      };\n    }\n  }\n\n  async getEventObjectById(\n    id: string,\n    relays: string[],\n    maxDelayms: number\n  ): Promise<EventObject> {\n    return this.getEventById(id, relays, maxDelayms).then(\n      (event) => new EventObject(event, this, relays)\n    );\n  }\n\n  async getEventById(\n    id: string,\n    relays: string[],\n    maxDelayms: number\n  ): Promise<Event> {\n    return new Promise((resolve, reject) => {\n      this.subscribe(\n        [{ids: [id]}],\n        relays,\n        (event) => {\n          resolve(event);\n        },\n        maxDelayms,\n        undefined\n        // {unsubscribeOnEose: true}\n      );\n    });\n  }\n\n  publish(event: Event, relays: string[]) {\n    for (const relay of unique(relays)) {\n      const instance = this.addOrGetRelay(relay);\n      instance.publish(event);\n    }\n  }\n\n  onnotice(cb: (url: string, msg: string) => void) {\n    this.noticecbs.push(cb);\n  }\n\n  onerror(cb: (url: string, msg: string) => void) {\n    this.relayByUrl.forEach((relay: Relay, url: string) =>\n      relay.on(\"error\", (msg: string) => cb(url, msg))\n    );\n  }\n  ondisconnect(cb: (url: string, msg: string) => void) {\n    this.relayByUrl.forEach((relay: Relay, url: string) =>\n      relay.on(\"disconnect\", (msg: string) => cb(url, msg))\n    );\n  }\n  getRelayStatuses(): [url: string, staus: number][] {\n    return Array.from(this.relayByUrl.entries())\n      .map(\n        ([url, relay]: [string, Relay]) =>\n          [url, relay.status] as [string, number]\n      )\n      .sort();\n  }\n  setWriteRelaysForPubKey(\n    pubkey: string,\n    writeRelays: string[],\n    created_at: number\n  ) {\n    const event: Event = {\n      created_at,\n      pubkey: \"\",\n      id: \"\",\n      sig: \"\",\n      content: JSON.stringify(writeRelays),\n      kind: 2,\n      tags: [[\"p\", pubkey]],\n    };\n    this.writeRelays.data.set(pubkey, event);\n  }\n  setCachedMetadata(pubkey: string, metadata: Event) {\n    this.metadataCache.data.set(pubkey, metadata);\n  }\n  setCachedContactList(pubkey: string, contactList: Event) {\n    this.contactListCache.data.set(pubkey, contactList);\n  }\n\n  subscribeReferencedEvents(\n    event: Event,\n    onEvent: OnEvent,\n    maxDelayms?: number,\n    onEose?: OnEose,\n    options: SubscriptionOptions = {}\n  ): () => void {\n    let ids: string[] = [];\n    let authors: string[] = [];\n\n    for (const tag of event.tags) {\n      if (tag[0] === \"p\") {\n        const pubkey = tag[1];\n        if (pubkey.length !== 64) {\n          console.log(\"bad pubkey\", pubkey, tag);\n          continue;\n        }\n        authors.push(pubkey);\n      }\n      if (tag[0] === \"e\") {\n        const id = tag[1];\n        ids.push(id);\n      }\n    }\n    if (ids.length === 0) {\n      return () => {};\n    }\n    if (authors.length === 0) {\n      if (options.defaultRelays) {\n        return this.subscribe(\n          [{ids}],\n          options.defaultRelays,\n          onEvent,\n          maxDelayms,\n          onEose,\n          options\n        );\n      } else {\n        console.error(\"No authors for ids in event\", event);\n        return () => {};\n      }\n    }\n    return this.subscribe(\n      [{ids, authors}],\n      undefined,\n      onEvent,\n      maxDelayms,\n      onEose,\n      options\n    );\n  }\n\n  fetchAndCacheMetadata(pubkey: string): Promise<Event> {\n    return this.metadataCache.get(pubkey);\n  }\n\n  fetchAndCacheContactList(pubkey: string): Promise<Event> {\n    return this.contactListCache.get(pubkey);\n  }\n\n  subscribeReferencedEventsAndPrefetchMetadata(\n    event: Event,\n    onEvent: OnEvent,\n    maxDelayms?: number,\n    onEose?: OnEose,\n    options: SubscriptionOptions = {}\n  ): () => void {\n    for (const tag of event.tags) {\n      if (tag[0] === \"p\") {\n        const pubkey = tag[1];\n        if (pubkey.length !== 64) {\n          console.log(\"bad pubkey\", pubkey, tag);\n          continue;\n        }\n        this.fetchAndCacheMetadata(pubkey);\n      }\n    }\n    return this.subscribeReferencedEvents(\n      event,\n      onEvent,\n      maxDelayms,\n      onEose,\n      options\n    );\n  }\n}\n", "import {stringify} from \"safe-stable-stringify\";\nimport type {Filter} from \"nostr-tools\";\n\nfunction indexForFilter(filter: Filter, key: string): string {\n  let new_filter = {...filter};\n  // @ts-ignore\n  delete new_filter[key];\n  return key + stringify(new_filter);\n}\n\nexport function mergeSimilarAndRemoveEmptyFilters(filters: Filter[]): Filter[] {\n  let r = [];\n  let indexByFilter = new Map<string, number>();\n  for (let filter of filters) {\n    let added = false;\n    for (let key in filter) {\n      if (\n        // @ts-ignore\n        filter[key] &&\n        ([\"ids\", \"authors\", \"kinds\"].includes(key) || key.startsWith(\"#\"))\n      ) {\n        // @ts-ignore\n        if (filter[key].length === 0) {\n          added = true;\n          break;\n        }\n        let index_by = indexForFilter(filter, key);\n        let index = indexByFilter.get(index_by);\n        if (index !== undefined) {\n          // @ts-ignore\n          let extendedFilter = r[index];\n          // remove all other groupings for r[index]\n          for (let key2 in extendedFilter) {\n            if (key2 !== key) {\n              let index_by2 = indexForFilter(extendedFilter, key2);\n              indexByFilter.delete(index_by2);\n            }\n          }\n          // @ts-ignore\n          r[index][key] = [...new Set(r[index][key].concat(filter[key]))];\n          added = true;\n          break;\n        }\n      }\n    }\n    if (!added) {\n      for (let key in filter) {\n        if (\n          // @ts-ignore\n          filter[key] &&\n          ([\"ids\", \"authors\", \"kinds\"].includes(key) || key.startsWith(\"#\"))\n        ) {\n          let index_by = indexForFilter(filter, key);\n          indexByFilter.set(index_by, r.length);\n        }\n      }\n      r.push({...filter});\n    }\n  }\n  return r;\n}\n", "import cjsModule from '../index.js'\n\nexport const configure = cjsModule.configure\n\nexport const stringify = cjsModule\nexport default cjsModule\n", "// allows sub/unsub and publishing before connection is established.\n// Much more refactoring is needed\n// Don't rely on Relay interface, it will change (I'll probably delete a lot of code from here, there's no need for\n// multiple listeners)\n\nimport {type Event, verifySignature, validateEvent} from \"nostr-tools\";\nimport {type Filter, matchFilters} from \"nostr-tools\";\nimport WebSocket from \"isomorphic-ws\";\nimport {getHex64, getSubName} from \"./fakejson\";\n\ntype RelayEvent = \"connect\" | \"disconnect\" | \"error\" | \"notice\";\n\nexport type Relay = {\n  url: string;\n  status: number;\n  connect: () => Promise<void>;\n  close: () => Promise<void>;\n  sub: (filters: Filter[], opts?: SubscriptionOptions) => Sub;\n  publish: (event: Event) => Pub;\n  on: (type: RelayEvent, cb: any) => void;\n  off: (type: RelayEvent, cb: any) => void;\n};\nexport type Pub = {\n  on: (type: \"ok\" | \"seen\" | \"failed\", cb: any) => void;\n  off: (type: \"ok\" | \"seen\" | \"failed\", cb: any) => void;\n};\nexport type Sub = {\n  sub: (filters: Filter[], opts: SubscriptionOptions) => Sub;\n  unsub: () => void;\n  on: (type: \"event\" | \"eose\", cb: any) => void;\n  off: (type: \"event\" | \"eose\", cb: any) => void;\n};\n\ntype SubscriptionOptions = {\n  skipVerification?: boolean;\n  id?: string;\n  eventIds?: Set<string>;\n};\nexport function relayInit(\n  url: string,\n  alreadyHaveEvent?: (id: string) => (Event & {id: string}) | undefined,\n  autoReconnect?: boolean\n): Relay {\n  return new RelayC(url, alreadyHaveEvent, autoReconnect).relayInit();\n}\nclass RelayC {\n  url: string;\n  alreadyHaveEvent?: (id: string) => (Event & {id: string}) | undefined;\n  logging: boolean = false;\n  constructor(\n    url: string,\n    alreadyHaveEvent?: (id: string) => (Event & {id: string}) | undefined,\n    autoReconnect?: boolean\n  ) {\n    this.url = url;\n    this.alreadyHaveEvent = alreadyHaveEvent;\n    this.autoReconnect = autoReconnect;\n  }\n  autoReconnect?: boolean;\n  ws: WebSocket | undefined;\n  sendOnConnect: string[] = [];\n  openSubs: {[id: string]: {filters: Filter[]} & SubscriptionOptions} = {};\n  closedByClient: boolean = false;\n  listeners: {\n    connect: Array<() => void>;\n    disconnect: Array<() => void>;\n    error: Array<() => void>;\n    notice: Array<(msg: string) => void>;\n  } = {\n    connect: [],\n    disconnect: [],\n    error: [],\n    notice: [],\n  };\n  subListeners: {\n    [subid: string]:\n      | {\n          event: Array<(event: Event) => void>;\n          eose: Array<() => void>;\n        }\n      | undefined;\n  } = {};\n  pubListeners: {\n    [eventid: string]: {\n      ok: Array<() => void>;\n      seen: Array<() => void>;\n      failed: Array<(reason: string) => void>;\n    };\n  } = {};\n  incomingMessageQueue: string[] = [];\n  handleNextInterval: any;\n\n  #handleNext() {\n    if (this.incomingMessageQueue.length === 0) {\n      clearInterval(this.handleNextInterval);\n      this.handleNextInterval = null;\n      return;\n    }\n    this.#handleMessage({data: this.incomingMessageQueue.shift()});\n  }\n\n  async trySend(params: [string, ...any]) {\n    const msg = JSON.stringify(params);\n\n    if (this.connected) {\n      this.ws?.send(msg);\n    } else {\n      this.sendOnConnect.push(msg);\n    }\n  }\n  resolveClose: (() => void) | undefined = undefined;\n\n  async #onclose() {\n    if (this.closedByClient) {\n      this.listeners.disconnect.forEach((cb) => cb());\n      this.resolveClose && this.resolveClose();\n    } else {\n      if (this.autoReconnect) {\n        this.#reconnect();\n      }\n    }\n  }\n  reconnectTimeout: number = 0;\n  #reconnect() {\n    setTimeout(() => {\n      this.reconnectTimeout = Math.max(2000, this.reconnectTimeout * 3);\n      console.log(\n        this.url,\n        \"reconnecting after \" + this.reconnectTimeout / 1000 + \"s\"\n      );\n      this.connect();\n    }, this.reconnectTimeout);\n  }\n\n  async #onmessage(e: any) {\n    this.incomingMessageQueue.push(e.data);\n    if (!this.handleNextInterval) {\n      this.handleNextInterval = setInterval(() => this.#handleNext(), 0);\n    }\n  }\n\n  async #handleMessage(e: any) {\n    let data;\n    let json: string = e.data.toString();\n    if (!json) {\n      return;\n    }\n    let eventId = getHex64(json, \"id\");\n    let event = this.alreadyHaveEvent?.(eventId);\n    if (event) {\n      const listener = this.subListeners[getSubName(json)];\n\n      if (!listener) {\n        return;\n      }\n\n      return listener.event.forEach((cb) => cb(event!));\n    }\n    try {\n      data = JSON.parse(json);\n    } catch (err) {\n      data = e.data;\n    }\n\n    if (data.length >= 1) {\n      switch (data[0]) {\n        case \"EVENT\":\n          if (this.logging) {\n            console.log(data);\n          }\n          if (data.length !== 3) return; // ignore empty or malformed EVENT\n\n          const id = data[1];\n          const event = data[2];\n          if (!this.openSubs[id]) {\n            return;\n          }\n          if (this.openSubs[id].eventIds?.has(eventId)) {\n            return;\n          }\n          this.openSubs[id].eventIds?.add(eventId);\n\n          if (\n            validateEvent(event) &&\n            this.openSubs[id] &&\n            (this.openSubs[id].skipVerification || verifySignature(event)) &&\n            matchFilters(this.openSubs[id].filters, event)\n          ) {\n            this.openSubs[id];\n            (this.subListeners[id]?.event || []).forEach((cb) => cb(event));\n          }\n          return;\n        case \"EOSE\": {\n          if (data.length !== 2) return; // ignore empty or malformed EOSE\n          const id = data[1];\n          if (this.logging) {\n            console.log(\"EOSE\", this.url, id);\n          }\n          (this.subListeners[id]?.eose || []).forEach((cb) => cb());\n          return;\n        }\n        case \"OK\": {\n          if (data.length < 3) return; // ignore empty or malformed OK\n          const id: string = data[1];\n          const ok: boolean = data[2];\n          const reason: string = data[3] || \"\";\n          if (ok) this.pubListeners[id]?.ok.forEach((cb) => cb());\n          else this.pubListeners[id]?.failed.forEach((cb) => cb(reason));\n          return;\n        }\n        case \"NOTICE\":\n          if (data.length !== 2) return; // ignore empty or malformed NOTICE\n          const notice = data[1];\n          this.listeners.notice.forEach((cb) => cb(notice));\n          return;\n      }\n    }\n  }\n  #onopen(opened: () => void) {\n    if (this.resolveClose) {\n      this.resolveClose();\n      return;\n    }\n    // console.log(\"#onopen setting reconnectTimeout to 0\");\n    // this.reconnectTimeout = 0;\n    // TODO: Send ephereal messages after subscription, permament before\n    for (const subid in this.openSubs) {\n      if (this.logging) {\n        console.log(\"REQ\", this.url, subid, ...this.openSubs[subid].filters);\n      }\n      this.trySend([\"REQ\", subid, ...this.openSubs[subid].filters]);\n    }\n    for (const msg of this.sendOnConnect) {\n      if (this.logging) {\n        console.log(\"(Relay msg)\", this.url, msg);\n      }\n      this.ws?.send(msg);\n    }\n    this.sendOnConnect = [];\n\n    this.listeners.connect.forEach((cb) => cb());\n    opened();\n  }\n\n  async connectRelay(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(this.url);\n      this.ws = ws;\n\n      ws.onopen = this.#onopen.bind(this, resolve);\n      ws.onerror = (e) => {\n        this.listeners.error.forEach((cb) => cb());\n        reject(e);\n      };\n      ws.onclose = this.#onclose.bind(this);\n      ws.onmessage = this.#onmessage.bind(this);\n    });\n  }\n\n  async connect(): Promise<void> {\n    if (this.ws?.readyState && this.ws.readyState === 1) return; // ws already open\n    try {\n      await this.connectRelay();\n    } catch (err) {\n      console.error(\"Error connecting relay \", this.url);\n    }\n  }\n\n  relayInit(): Relay {\n    const this2 = this;\n    return {\n      url: this2.url,\n      sub: this2.sub.bind(this2),\n      on: this2.on.bind(this2),\n      off: this2.off.bind(this2),\n      publish: this2.publish.bind(this2),\n      connect: this2.connect.bind(this2),\n      close(): Promise<void> {\n        return this2.close();\n      },\n      get status() {\n        return this2.status;\n      },\n      // @ts-ignore\n      relay: this2,\n    };\n  }\n  get status() {\n    return this.ws?.readyState ?? 3;\n  }\n  get connected() {\n    return this.ws?.readyState === 1;\n  }\n  close(): Promise<void> {\n    this.closedByClient = true;\n    this.ws?.close();\n    return new Promise<void>((resolve) => {\n      this.resolveClose = resolve;\n    });\n  }\n  on(type: RelayEvent, cb: any) {\n    this.listeners[type].push(cb);\n    if (type === \"connect\" && this.ws?.readyState === 1) {\n      cb();\n    }\n  }\n\n  off(type: RelayEvent, cb: any) {\n    const index = this.listeners[type].indexOf(cb);\n    if (index !== -1) this.listeners[type].splice(index, 1);\n  }\n\n  publish(event: Event): Pub {\n    const this2 = this;\n    if (!event.id) throw new Error(`event ${event} has no id`);\n    const id = event.id;\n\n    let sent = false;\n    let mustMonitor = false;\n\n    this2\n      .trySend([\"EVENT\", event])\n      .then(() => {\n        sent = true;\n        if (mustMonitor) {\n          startMonitoring();\n          mustMonitor = false;\n        }\n      })\n      .catch(() => {});\n\n    const startMonitoring = () => {\n      const monitor = this.sub([{ids: [id]}], {\n        id: `monitor-${id.slice(0, 5)}`,\n      });\n      const willUnsub = setTimeout(() => {\n        (this2.pubListeners[id]?.failed || []).forEach((cb) =>\n          cb(\"event not seen after 5 seconds\")\n        );\n        monitor.unsub();\n      }, 5000);\n      monitor.on(\"event\", () => {\n        clearTimeout(willUnsub);\n        (this2.pubListeners[id]?.seen || []).forEach((cb) => cb());\n      });\n    };\n\n    return {\n      on: (type: \"ok\" | \"seen\" | \"failed\", cb: any) => {\n        this2.pubListeners[id] = this2.pubListeners[id] || {\n          ok: [],\n          seen: [],\n          failed: [],\n        };\n        this2.pubListeners[id][type].push(cb);\n\n        if (type === \"seen\") {\n          if (sent) startMonitoring();\n          else mustMonitor = true;\n        }\n      },\n      off: (type: \"ok\" | \"seen\" | \"failed\", cb: any) => {\n        const listeners = this2.pubListeners[id];\n        if (!listeners) return;\n        const idx = listeners[type].indexOf(cb);\n        if (idx >= 0) listeners[type].splice(idx, 1);\n      },\n    };\n  }\n\n  sub(filters: Filter[], opts: SubscriptionOptions = {}): Sub {\n    const this2 = this;\n    const subid = opts.id || Math.random().toString().slice(2);\n    const skipVerification = opts.skipVerification || false;\n\n    this2.openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification,\n    };\n    if (this2.connected) {\n      if (this.logging) {\n        console.log(\"REQ2\", this.url, subid, ...filters);\n      }\n      this2.trySend([\"REQ\", subid, ...filters]);\n    }\n\n    return {\n      sub: (newFilters, newOpts = {}) =>\n        this.sub(newFilters || filters, {\n          skipVerification: newOpts.skipVerification || skipVerification,\n          id: subid,\n        }),\n      unsub: () => {\n        delete this2.openSubs[subid];\n        delete this2.subListeners[subid];\n        if (this2.connected) {\n          if (this2.logging) {\n            console.log(\"CLOSE\", this.url, subid);\n          }\n          this2.trySend([\"CLOSE\", subid]);\n        }\n      },\n      on: (type: \"event\" | \"eose\", cb: any): void => {\n        this2.subListeners[subid] = this2.subListeners[subid] || {\n          event: [],\n          eose: [],\n        };\n        this2.subListeners[subid]![type].push(cb);\n      },\n      off: (type: \"event\" | \"eose\", cb: any): void => {\n        const listeners = this2.subListeners[subid];\n\n        if (!listeners) return;\n\n        const idx = listeners[type].indexOf(cb);\n        if (idx >= 0) listeners[type].splice(idx, 1);\n      },\n    };\n  }\n}\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// keys.ts\nimport * as secp256k1 from \"@noble/secp256k1\";\nfunction generatePrivateKey() {\n  return secp256k1.utils.bytesToHex(secp256k1.utils.randomPrivateKey());\n}\nfunction getPublicKey(privateKey) {\n  return secp256k1.utils.bytesToHex(secp256k1.schnorr.getPublicKey(privateKey));\n}\n\n// event.ts\nimport * as secp256k12 from \"@noble/secp256k1\";\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at < sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at >= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at > event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at < event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at > sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at <= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at < event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at > event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\n\n// event.ts\nvar Kind = /* @__PURE__ */ ((Kind2) => {\n  Kind2[Kind2[\"Metadata\"] = 0] = \"Metadata\";\n  Kind2[Kind2[\"Text\"] = 1] = \"Text\";\n  Kind2[Kind2[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  Kind2[Kind2[\"Contacts\"] = 3] = \"Contacts\";\n  Kind2[Kind2[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  Kind2[Kind2[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  Kind2[Kind2[\"Reaction\"] = 7] = \"Reaction\";\n  Kind2[Kind2[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  Kind2[Kind2[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  Kind2[Kind2[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  Kind2[Kind2[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  Kind2[Kind2[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  Kind2[Kind2[\"Report\"] = 1984] = \"Report\";\n  Kind2[Kind2[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  Kind2[Kind2[\"Zap\"] = 9735] = \"Zap\";\n  Kind2[Kind2[\"RelayList\"] = 10002] = \"RelayList\";\n  Kind2[Kind2[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  Kind2[Kind2[\"Article\"] = 30023] = \"Article\";\n  return Kind2;\n})(Kind || {});\nfunction getBlankEvent() {\n  return {\n    kind: 255,\n    content: \"\",\n    tags: [],\n    created_at: 0\n  };\n}\nfunction finishEvent(t, privateKey) {\n  let event = t;\n  event.pubkey = getPublicKey(privateKey);\n  event.id = getEventHash(event);\n  event.sig = signEvent(event, privateKey);\n  return event;\n}\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([\n    0,\n    evt.pubkey,\n    evt.created_at,\n    evt.kind,\n    evt.tags,\n    evt.content\n  ]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return secp256k12.utils.bytesToHex(eventHash);\n}\nfunction validateEvent(event) {\n  if (typeof event !== \"object\")\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i = 0; i < event.tags.length; i++) {\n    let tag = event.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction verifySignature(event) {\n  return secp256k12.schnorr.verifySync(\n    event.sig,\n    getEventHash(event),\n    event.pubkey\n  );\n}\nfunction signEvent(event, key) {\n  return secp256k12.utils.bytesToHex(\n    secp256k12.schnorr.signSync(getEventHash(event), key)\n  );\n}\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1)\n    return false;\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1)\n    return false;\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(\n        ([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1\n      ))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at >= filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i = 0; i < filters.length; i++) {\n    if (matchFilter(filters[i], event))\n      return true;\n  }\n  return false;\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// relay.ts\nfunction relayInit(url, options = {}) {\n  let { listTimeout = 3e3, getTimeout = 3e3 } = options;\n  var ws;\n  var openSubs = {};\n  var listeners = {\n    connect: [],\n    disconnect: [],\n    error: [],\n    notice: []\n  };\n  var subListeners = {};\n  var pubListeners = {};\n  async function connectRelay() {\n    return new Promise((resolve, reject) => {\n      try {\n        ws = new WebSocket(url);\n      } catch (err) {\n        reject(err);\n      }\n      ws.onopen = () => {\n        listeners.connect.forEach((cb) => cb());\n        resolve();\n      };\n      ws.onerror = () => {\n        listeners.error.forEach((cb) => cb());\n        reject();\n      };\n      ws.onclose = async () => {\n        listeners.disconnect.forEach((cb) => cb());\n      };\n      let incomingMessageQueue = [];\n      let handleNextInterval;\n      ws.onmessage = (e) => {\n        incomingMessageQueue.push(e.data);\n        if (!handleNextInterval) {\n          handleNextInterval = setInterval(handleNext, 0);\n        }\n      };\n      function handleNext() {\n        if (incomingMessageQueue.length === 0) {\n          clearInterval(handleNextInterval);\n          handleNextInterval = null;\n          return;\n        }\n        var json = incomingMessageQueue.shift();\n        if (!json)\n          return;\n        let subid = getSubscriptionId(json);\n        if (subid) {\n          let so = openSubs[subid];\n          if (so && so.alreadyHaveEvent && so.alreadyHaveEvent(getHex64(json, \"id\"), url)) {\n            return;\n          }\n        }\n        try {\n          let data = JSON.parse(json);\n          switch (data[0]) {\n            case \"EVENT\":\n              let id = data[1];\n              let event = data[2];\n              if (validateEvent(event) && openSubs[id] && (openSubs[id].skipVerification || verifySignature(event)) && matchFilters(openSubs[id].filters, event)) {\n                openSubs[id];\n                (subListeners[id]?.event || []).forEach((cb) => cb(event));\n              }\n              return;\n            case \"EOSE\": {\n              let id2 = data[1];\n              if (id2 in subListeners) {\n                subListeners[id2].eose.forEach((cb) => cb());\n                subListeners[id2].eose = [];\n              }\n              return;\n            }\n            case \"OK\": {\n              let id2 = data[1];\n              let ok = data[2];\n              let reason = data[3] || \"\";\n              if (id2 in pubListeners) {\n                if (ok)\n                  pubListeners[id2].ok.forEach((cb) => cb());\n                else\n                  pubListeners[id2].failed.forEach((cb) => cb(reason));\n                pubListeners[id2].ok = [];\n                pubListeners[id2].failed = [];\n              }\n              return;\n            }\n            case \"NOTICE\":\n              let notice = data[1];\n              listeners.notice.forEach((cb) => cb(notice));\n              return;\n          }\n        } catch (err) {\n          return;\n        }\n      }\n    });\n  }\n  function connected() {\n    return ws?.readyState === 1;\n  }\n  async function connect() {\n    if (connected())\n      return;\n    await connectRelay();\n  }\n  async function trySend(params) {\n    let msg = JSON.stringify(params);\n    if (!connected()) {\n      await new Promise((resolve) => setTimeout(resolve, 1e3));\n      if (!connected()) {\n        return;\n      }\n    }\n    try {\n      ws.send(msg);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const sub = (filters, {\n    skipVerification = false,\n    alreadyHaveEvent = null,\n    id = Math.random().toString().slice(2)\n  } = {}) => {\n    let subid = id;\n    openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification,\n      alreadyHaveEvent\n    };\n    trySend([\"REQ\", subid, ...filters]);\n    return {\n      sub: (newFilters, newOpts = {}) => sub(newFilters || filters, {\n        skipVerification: newOpts.skipVerification || skipVerification,\n        alreadyHaveEvent: newOpts.alreadyHaveEvent || alreadyHaveEvent,\n        id: subid\n      }),\n      unsub: () => {\n        delete openSubs[subid];\n        delete subListeners[subid];\n        trySend([\"CLOSE\", subid]);\n      },\n      on: (type, cb) => {\n        subListeners[subid] = subListeners[subid] || {\n          event: [],\n          eose: []\n        };\n        subListeners[subid][type].push(cb);\n      },\n      off: (type, cb) => {\n        let listeners2 = subListeners[subid];\n        let idx = listeners2[type].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type].splice(idx, 1);\n      }\n    };\n  };\n  return {\n    url,\n    sub,\n    on: (type, cb) => {\n      listeners[type].push(cb);\n      if (type === \"connect\" && ws?.readyState === 1) {\n        ;\n        cb();\n      }\n    },\n    off: (type, cb) => {\n      let index = listeners[type].indexOf(cb);\n      if (index !== -1)\n        listeners[type].splice(index, 1);\n    },\n    list: (filters, opts) => new Promise((resolve) => {\n      let s = sub(filters, opts);\n      let events = [];\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(events);\n      }, listTimeout);\n      s.on(\"eose\", () => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(events);\n      });\n      s.on(\"event\", (event) => {\n        events.push(event);\n      });\n    }),\n    get: (filter, opts) => new Promise((resolve) => {\n      let s = sub([filter], opts);\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, getTimeout);\n      s.on(\"event\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    publish(event) {\n      if (!event.id)\n        throw new Error(`event ${event} has no id`);\n      let id = event.id;\n      trySend([\"EVENT\", event]);\n      return {\n        on: (type, cb) => {\n          pubListeners[id] = pubListeners[id] || {\n            ok: [],\n            failed: []\n          };\n          pubListeners[id][type].push(cb);\n        },\n        off: (type, cb) => {\n          let listeners2 = pubListeners[id];\n          if (!listeners2)\n            return;\n          let idx = listeners2[type].indexOf(cb);\n          if (idx >= 0)\n            listeners2[type].splice(idx, 1);\n        }\n      };\n    },\n    connect,\n    close() {\n      listeners = { connect: [], disconnect: [], error: [], notice: [] };\n      subListeners = {};\n      pubListeners = {};\n      if (ws.readyState === WebSocket.OPEN) {\n        ws?.close();\n      }\n    },\n    get status() {\n      return ws?.readyState ?? 3;\n    }\n  };\n}\n\n// pool.ts\nvar SimplePool = class {\n  _conn;\n  _seenOn = {};\n  eoseSubTimeout;\n  getTimeout;\n  constructor(options = {}) {\n    this._conn = {};\n    this.eoseSubTimeout = options.eoseSubTimeout || 3400;\n    this.getTimeout = options.getTimeout || 3400;\n  }\n  close(relays) {\n    relays.forEach((url) => {\n      let relay = this._conn[normalizeURL(url)];\n      if (relay)\n        relay.close();\n    });\n  }\n  async ensureRelay(url) {\n    const nm = normalizeURL(url);\n    const existing = this._conn[nm];\n    if (existing && existing.status === 1)\n      return existing;\n    if (existing) {\n      await existing.connect();\n      return existing;\n    }\n    const relay = relayInit(nm, {\n      getTimeout: this.getTimeout * 0.9,\n      listTimeout: this.getTimeout * 0.9\n    });\n    this._conn[nm] = relay;\n    await relay.connect();\n    return relay;\n  }\n  sub(relays, filters, opts) {\n    let _knownIds = /* @__PURE__ */ new Set();\n    let modifiedOpts = { ...opts || {} };\n    modifiedOpts.alreadyHaveEvent = (id, url) => {\n      if (opts?.alreadyHaveEvent?.(id, url)) {\n        return true;\n      }\n      let set = this._seenOn[id] || /* @__PURE__ */ new Set();\n      set.add(url);\n      this._seenOn[id] = set;\n      return _knownIds.has(id);\n    };\n    let subs = [];\n    let eventListeners = /* @__PURE__ */ new Set();\n    let eoseListeners = /* @__PURE__ */ new Set();\n    let eosesMissing = relays.length;\n    let eoseSent = false;\n    let eoseTimeout = setTimeout(() => {\n      eoseSent = true;\n      for (let cb of eoseListeners.values())\n        cb();\n    }, this.eoseSubTimeout);\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n      } catch (err) {\n        handleEose();\n        return;\n      }\n      if (!r)\n        return;\n      let s = r.sub(filters, modifiedOpts);\n      s.on(\"event\", (event) => {\n        _knownIds.add(event.id);\n        for (let cb of eventListeners.values())\n          cb(event);\n      });\n      s.on(\"eose\", () => {\n        if (eoseSent)\n          return;\n        handleEose();\n      });\n      subs.push(s);\n      function handleEose() {\n        eosesMissing--;\n        if (eosesMissing === 0) {\n          clearTimeout(eoseTimeout);\n          for (let cb of eoseListeners.values())\n            cb();\n        }\n      }\n    });\n    let greaterSub = {\n      sub(filters2, opts2) {\n        subs.forEach((sub) => sub.sub(filters2, opts2));\n        return greaterSub;\n      },\n      unsub() {\n        subs.forEach((sub) => sub.unsub());\n      },\n      on(type, cb) {\n        if (type === \"event\") {\n          eventListeners.add(cb);\n        } else if (type === \"eose\") {\n          eoseListeners.add(cb);\n        }\n      },\n      off(type, cb) {\n        if (type === \"event\") {\n          eventListeners.delete(cb);\n        } else if (type === \"eose\")\n          eoseListeners.delete(cb);\n      }\n    };\n    return greaterSub;\n  }\n  get(relays, filter, opts) {\n    return new Promise((resolve) => {\n      let sub = this.sub(relays, [filter], opts);\n      let timeout = setTimeout(() => {\n        sub.unsub();\n        resolve(null);\n      }, this.getTimeout);\n      sub.on(\"event\", (event) => {\n        resolve(event);\n        clearTimeout(timeout);\n        sub.unsub();\n      });\n    });\n  }\n  list(relays, filters, opts) {\n    return new Promise((resolve) => {\n      let events = [];\n      let sub = this.sub(relays, filters, opts);\n      sub.on(\"event\", (event) => {\n        events.push(event);\n      });\n      sub.on(\"eose\", () => {\n        sub.unsub();\n        resolve(events);\n      });\n    });\n  }\n  publish(relays, event) {\n    const pubs = [];\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n        pubs.push(r.publish(event));\n      } catch (_) {\n      }\n    });\n    return {\n      on(type, cb) {\n        pubs.forEach((pub, i) => {\n          pub.on(type, () => cb(relays[i]));\n        });\n      },\n      off() {\n      }\n    };\n  }\n  seenOn(id) {\n    return Array.from(this._seenOn[id]?.values?.() || []);\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport * as secp256k13 from \"@noble/secp256k1\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: secp256k13.utils.bytesToHex(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: secp256k13.utils.bytesToHex(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? secp256k13.utils.bytesToHex(tlv[2][0]) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: secp256k13.utils.bytesToHex(tlv[2][0]),\n          kind: parseInt(secp256k13.utils.bytesToHex(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: secp256k13.utils.bytesToHex(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      continue;\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(hex) {\n  return encodeBytes(\"nsec\", hex);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hex);\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hex);\n}\nfunction encodeBytes(prefix, hex) {\n  let data = secp256k13.utils.hexToBytes(hex);\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [secp256k13.utils.hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nprofile\", words, Bech32MaxSize);\n}\nfunction neventEncode(event) {\n  let data = encodeTLV({\n    0: [secp256k13.utils.hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [secp256k13.utils.hexToBytes(event.author)] : []\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nevent\", words, Bech32MaxSize);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [secp256k13.utils.hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"naddr\", words, Bech32MaxSize);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return secp256k13.utils.concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = ref[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { randomBytes } from \"@noble/hashes/utils\";\nimport * as secp256k14 from \"@noble/secp256k1\";\nimport { base64 } from \"@scure/base\";\nasync function encrypt(privkey, pubkey, text) {\n  const key = secp256k14.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"encrypt\"]\n  );\n  let ciphertext = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    plaintext\n  );\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(privkey, pubkey, data) {\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k14.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"decrypt\"]\n  );\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    ciphertext\n  );\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  let [name, domain] = fullname.split(\"@\");\n  if (!domain) {\n    domain = name;\n    name = \"_\";\n  }\n  if (!name.match(/^[A-Za-z0-9-_]+$/))\n    return null;\n  if (!domain.includes(\".\"))\n    return null;\n  let res;\n  try {\n    res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`)).json();\n  } catch (err) {\n    return null;\n  }\n  if (!res?.names?.[name])\n    return null;\n  let pubkey = res.names[name];\n  let relays = res.relays?.[pubkey] || [];\n  return {\n    pubkey,\n    relays\n  };\n}\n\n// nip06.ts\nvar nip06_exports = {};\n__export(nip06_exports, {\n  generateSeedWords: () => generateSeedWords,\n  privateKeyFromSeedWords: () => privateKeyFromSeedWords,\n  validateWords: () => validateWords\n});\nimport * as secp256k15 from \"@noble/secp256k1\";\nimport { wordlist } from \"@scure/bip39/wordlists/english.js\";\nimport {\n  generateMnemonic,\n  mnemonicToSeedSync,\n  validateMnemonic\n} from \"@scure/bip39\";\nimport { HDKey } from \"@scure/bip32\";\nfunction privateKeyFromSeedWords(mnemonic, passphrase) {\n  let root = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic, passphrase));\n  let privateKey = root.derive(`m/44'/1237'/0'/0/0`).privateKey;\n  if (!privateKey)\n    throw new Error(\"could not derive private key\");\n  return secp256k15.utils.bytesToHex(privateKey);\n}\nfunction generateSeedWords() {\n  return generateMnemonic(wordlist);\n}\nfunction validateWords(words) {\n  return validateMnemonic(words, wordlist);\n}\n\n// nip26.ts\nvar nip26_exports = {};\n__export(nip26_exports, {\n  createDelegation: () => createDelegation,\n  getDelegator: () => getDelegator\n});\nimport * as secp256k16 from \"@noble/secp256k1\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction createDelegation(privateKey, parameters) {\n  let conditions = [];\n  if ((parameters.kind || -1) >= 0)\n    conditions.push(`kind=${parameters.kind}`);\n  if (parameters.until)\n    conditions.push(`created_at<${parameters.until}`);\n  if (parameters.since)\n    conditions.push(`created_at>${parameters.since}`);\n  let cond = conditions.join(\"&\");\n  if (cond === \"\")\n    throw new Error(\"refusing to create a delegation without any conditions\");\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${parameters.pubkey}:${cond}`)\n  );\n  let sig = secp256k16.utils.bytesToHex(\n    secp256k16.schnorr.signSync(sighash, privateKey)\n  );\n  return {\n    from: getPublicKey(privateKey),\n    to: parameters.pubkey,\n    cond,\n    sig\n  };\n}\nfunction getDelegator(event) {\n  let tag = event.tags.find((tag2) => tag2[0] === \"delegation\" && tag2.length >= 4);\n  if (!tag)\n    return null;\n  let pubkey = tag[1];\n  let cond = tag[2];\n  let sig = tag[3];\n  let conditions = cond.split(\"&\");\n  for (let i = 0; i < conditions.length; i++) {\n    let [key, operator, value] = conditions[i].split(/\\b/);\n    if (key === \"kind\" && operator === \"=\" && event.kind === parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \"<\" && event.created_at < parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \">\" && event.created_at > parseInt(value))\n      continue;\n    else\n      return null;\n  }\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${event.pubkey}:${cond}`)\n  );\n  if (!secp256k16.schnorr.verifySync(sig, sighash, pubkey))\n    return null;\n  return pubkey;\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation2,\n  validateGithub: () => validateGithub\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch2(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation3,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = `https://${domain}/.well-known/lnurlp/${name}`;\n    } else {\n      return null;\n    }\n    let res = await _fetch3(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifySignature(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(\n    ([t]) => t === \"e\" || t === \"p\" || t === \"a\"\n  );\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [\n      ...tagsFromZapRequest,\n      [\"bolt11\", bolt11],\n      [\"description\", zapRequest]\n    ]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// index.ts\nimport * as secp256k17 from \"@noble/secp256k1\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nsecp256k17.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha2563, key, secp256k17.utils.concatBytes(...msgs));\nsecp256k17.utils.sha256Sync = (...msgs) => sha2563(secp256k17.utils.concatBytes(...msgs));\nexport {\n  Kind,\n  SimplePool,\n  finishEvent,\n  fakejson_exports as fj,\n  generatePrivateKey,\n  getBlankEvent,\n  getEventHash,\n  getPublicKey,\n  matchFilter,\n  matchFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip06_exports as nip06,\n  nip19_exports as nip19,\n  nip26_exports as nip26,\n  nip39_exports as nip39,\n  nip57_exports as nip57,\n  parseReferences,\n  relayInit,\n  serializeEvent,\n  signEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifySignature\n};\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n", "import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n", "export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n", "/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport * as secp from '@noble/secp256k1';\nimport { base58check as base58checker } from '@scure/base';\n\n// Enable sync API for noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha256, key, secp.utils.concatBytes(...msgs));\nconst base58check = base58checker(sha256);\n\nfunction bytesToNumber(bytes: Uint8Array): bigint {\n  return BigInt(`0x${bytesToHex(bytes)}`);\n}\n\nfunction numberToBytes(num: bigint): Uint8Array {\n  return hexToBytes(num.toString(16).padStart(64, '0'));\n}\n\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS: Versions = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET: number = 0x80000000;\n\nexport interface Versions {\n  private: number;\n  public: number;\n}\n\nconst hash160 = (data: Uint8Array) => ripemd160(sha256(data));\nconst fromU32 = (data: Uint8Array) => createView(data).getUint32(0, false);\nconst toU32 = (n: number) => {\n  if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n    throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n  }\n  const buf = new Uint8Array(4);\n  createView(buf).setUint32(0, n, false);\n  return buf;\n};\n\ninterface HDKeyOpt {\n  versions: Versions;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: number;\n  chainCode: Uint8Array;\n  publicKey?: Uint8Array;\n  privateKey?: Uint8Array | bigint;\n}\n\nexport class HDKey {\n  get fingerprint(): number {\n    if (!this.pubHash) {\n      throw new Error('No publicKey set!');\n    }\n    return fromU32(this.pubHash);\n  }\n  get identifier(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get pubKeyHash(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get privateKey(): Uint8Array | null {\n    return this.privKeyBytes || null;\n  }\n  get publicKey(): Uint8Array | null {\n    return this.pubKey || null;\n  }\n  get privateExtendedKey(): string {\n    const priv = this.privateKey;\n    if (!priv) {\n      throw new Error('No private key');\n    }\n    return base58check.encode(\n      this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv))\n    );\n  }\n  get publicExtendedKey(): string {\n    if (!this.pubKey) {\n      throw new Error('No public key');\n    }\n    return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n  }\n\n  public static fromMasterSeed(seed: Uint8Array, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    assertBytes(seed);\n    if (8 * seed.length < 128 || 8 * seed.length > 512) {\n      throw new Error(\n        `HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`\n      );\n    }\n    const I = hmac(sha512, MASTER_SECRET, seed);\n    return new HDKey({\n      versions,\n      chainCode: I.slice(32),\n      privateKey: I.slice(0, 32),\n    });\n  }\n\n  public static fromExtendedKey(base58key: string, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    const keyBuffer: Uint8Array = base58check.decode(base58key);\n    const keyView = createView(keyBuffer);\n    const version = keyView.getUint32(0, false);\n    const opt = {\n      versions,\n      depth: keyBuffer[4],\n      parentFingerprint: keyView.getUint32(5, false),\n      index: keyView.getUint32(9, false),\n      chainCode: keyBuffer.slice(13, 45),\n    };\n    const key = keyBuffer.slice(45);\n    const isPriv = key[0] === 0;\n    if (version !== versions[isPriv ? 'private' : 'public']) {\n      throw new Error('Version mismatch');\n    }\n    if (isPriv) {\n      return new HDKey({ ...opt, privateKey: key.slice(1) });\n    } else {\n      return new HDKey({ ...opt, publicKey: key });\n    }\n  }\n\n  public static fromJSON(json: { xpriv: string }): HDKey {\n    return HDKey.fromExtendedKey(json.xpriv);\n  }\n  public readonly versions: Versions;\n  public readonly depth: number = 0;\n  public readonly index: number = 0;\n  public readonly chainCode: Uint8Array | null = null;\n  public readonly parentFingerprint: number = 0;\n  private privKey?: bigint;\n  private privKeyBytes?: Uint8Array;\n  private pubKey?: Uint8Array;\n  private pubHash: Uint8Array | undefined;\n\n  constructor(opt: HDKeyOpt) {\n    if (!opt || typeof opt !== 'object') {\n      throw new Error('HDKey.constructor must not be called directly');\n    }\n    this.versions = opt.versions || BITCOIN_VERSIONS;\n    this.depth = opt.depth || 0;\n    this.chainCode = opt.chainCode;\n    this.index = opt.index || 0;\n    this.parentFingerprint = opt.parentFingerprint || 0;\n    if (!this.depth) {\n      if (this.parentFingerprint || this.index) {\n        throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n      }\n    }\n    if (opt.publicKey && opt.privateKey) {\n      throw new Error('HDKey: publicKey and privateKey at same time.');\n    }\n    if (opt.privateKey) {\n      if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      this.privKey =\n        typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n      this.privKeyBytes = numberToBytes(this.privKey);\n      this.pubKey = secp.getPublicKey(opt.privateKey, true);\n    } else if (opt.publicKey) {\n      this.pubKey = secp.Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n    } else {\n      throw new Error('HDKey: no public or private key provided');\n    }\n    this.pubHash = hash160(this.pubKey);\n  }\n\n  public derive(path: string): HDKey {\n    if (!/^[mM]'?/.test(path)) {\n      throw new Error('Path must start with \"m\" or \"M\"');\n    }\n    if (/^[mM]'?$/.test(path)) {\n      return this;\n    }\n    const parts = path.replace(/^[mM]'?\\//, '').split('/');\n    // tslint:disable-next-line\n    let child: HDKey = this;\n    for (const c of parts) {\n      const m = /^(\\d+)('?)$/.exec(c);\n      if (!m || m.length !== 3) {\n        throw new Error(`Invalid child index: ${c}`);\n      }\n      let idx = +m[1];\n      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n        throw new Error('Invalid index');\n      }\n      // hardened key\n      if (m[2] === \"'\") {\n        idx += HARDENED_OFFSET;\n      }\n      child = child.deriveChild(idx);\n    }\n    return child;\n  }\n\n  public deriveChild(index: number): HDKey {\n    if (!this.pubKey || !this.chainCode) {\n      throw new Error('No publicKey or chainCode set');\n    }\n    let data = toU32(index);\n    if (index >= HARDENED_OFFSET) {\n      // Hardened\n      const priv = this.privateKey;\n      if (!priv) {\n        throw new Error('Could not derive hardened child key');\n      }\n      // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n      data = concatBytes(new Uint8Array([0]), priv, data);\n    } else {\n      // Normal child: serP(point(kpar)) || ser32(index)\n      data = concatBytes(this.pubKey, data);\n    }\n    const I = hmac(sha512, this.chainCode, data);\n    const childTweak = bytesToNumber(I.slice(0, 32));\n    const chainCode = I.slice(32);\n    if (!secp.utils.isValidPrivateKey(childTweak)) {\n      throw new Error('Tweak bigger than curve order');\n    }\n    const opt: HDKeyOpt = {\n      versions: this.versions,\n      chainCode,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n      index,\n    };\n    try {\n      // Private parent key -> private child key\n      if (this.privateKey) {\n        const added = secp.utils.mod(this.privKey! + childTweak, secp.CURVE.n);\n        if (!secp.utils.isValidPrivateKey(added)) {\n          throw new Error('The tweak was out of range or the resulted private key is invalid');\n        }\n        opt.privateKey = added;\n      } else {\n        const added = secp.Point.fromHex(this.pubKey).add(secp.Point.fromPrivateKey(childTweak));\n        // Cryptographically impossible: hmac-sha512 preimage would need to be found\n        if (added.equals(secp.Point.ZERO)) {\n          throw new Error('The tweak was equal to negative P, which made the result key invalid');\n        }\n        opt.publicKey = added.toRawBytes(true);\n      }\n      return new HDKey(opt);\n    } catch (err) {\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  public sign(hash: Uint8Array): Uint8Array {\n    if (!this.privateKey) {\n      throw new Error('No privateKey set!');\n    }\n    assertBytes(hash, 32);\n    return secp.signSync(hash, this.privKey!, {\n      canonical: true,\n      der: false,\n    });\n  }\n\n  public verify(hash: Uint8Array, signature: Uint8Array): boolean {\n    assertBytes(hash, 32);\n    assertBytes(signature, 64);\n    if (!this.publicKey) {\n      throw new Error('No publicKey set!');\n    }\n    let sig;\n    try {\n      sig = secp.Signature.fromCompact(signature);\n    } catch (error) {\n      return false;\n    }\n    return secp.verify(sig, hash, this.publicKey);\n  }\n\n  public wipePrivateData(): this {\n    this.privKey = undefined;\n    if (this.privKeyBytes) {\n      this.privKeyBytes.fill(0);\n      this.privKeyBytes = undefined;\n    }\n    return this;\n  }\n  public toJSON(): { xpriv: string; xpub: string } {\n    return {\n      xpriv: this.privateExtendedKey,\n      xpub: this.publicExtendedKey,\n    };\n  }\n\n  private serialize(version: number, key: Uint8Array) {\n    if (!this.chainCode) {\n      throw new Error('No chainCode set');\n    }\n    assertBytes(key, 33);\n    // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    return concatBytes(\n      toU32(version),\n      new Uint8Array([this.depth]),\n      toU32(this.parentFingerprint),\n      toU32(this.index),\n      this.chainCode,\n      key\n    );\n  }\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  // Cleanup internal state. Not '.clean' because instance is not usable after that.\n  // Clean usually resets instance to initial state, but it is not possible for keyed hashes if key is consumed into state.\n  // NOTE: if digest is not consumed by user, user need manually call '.destroy' if zeroing is required\n  abstract destroy(): void;\n  // Unsafe because doesn't check if \"to\" is correct. Can be used as clone() if no opts passed.\n  // Why cloneInto instead of clone? Mostly performance (same as _digestInto), but also has nice property: it reuses instance\n  // which means all internal buffers is overwritten, which also causes overwrite buffer which used for digest (in some cases).\n  // We don't provide any guarantees about cleanup (it is impossible to!), so should be enough for now.\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n", "// Global symbol available in browsers only\ndeclare const self: Record<string, any> | undefined;\nexport const crypto: { node?: any; web?: any } = {\n  node: undefined,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\n\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\n\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n", "// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n", "export function getHex64(json: string, field: string): string {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\n\nexport function getSubName(json: string): string {\n  let idx = json.indexOf(`\"EVENT\"`) + 7;\n  let sliced = json.slice(idx);\n  let idx2 = sliced.indexOf(`\"`) + 1;\n  let sliced2 = sliced.slice(idx2);\n  return sliced2.slice(0, sliced2.indexOf(`\"`));\n}\n\nexport function getInt(json: string, field: string): number {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\n\nexport function matchEventId(json: string, id: string): boolean {\n  return id === getHex64(json, \"id\");\n}\n\nexport function matchEventPubkey(json: string, pubkey: string): boolean {\n  return pubkey === getHex64(json, \"pubkey\");\n}\n\nexport function matchEventKind(json: string, kind: number): boolean {\n  return kind === getInt(json, \"kind\");\n}\n", "import {Filter, Kind, Event} from \"nostr-tools\";\n\nexport class EventCache {\n  eventsById: Map<string, Event> = new Map();\n  metadataByPubKey: Map<string, Event> = new Map();\n  contactsByPubKey: Map<string, Event> = new Map();\n  authorsKindsByPubKey: Map<string, Map<number, Event[]>> = new Map();\n  eventsByTags: Map<string, Event[]> = new Map();\n\n  #addEventToAuthorKindsByPubKey(event: Event) {\n    const kindsByPubKey = this.authorsKindsByPubKey.get(event.pubkey);\n    if (!kindsByPubKey) {\n      this.authorsKindsByPubKey.set(\n        event.pubkey,\n        new Map([[event.kind, [event]]])\n      );\n    } else {\n      const events = kindsByPubKey.get(event.kind);\n      if (!events) {\n        kindsByPubKey.set(event.kind, [event]);\n      } else {\n        if (event.kind === Kind.Metadata || event.kind === Kind.Contacts) {\n          if (event.created_at > events[0].created_at) {\n            events[0] = event;\n          }\n        } else {\n          events.push(event);\n        }\n      }\n    }\n  }\n\n  #addEventToEventsByTags(event: Event) {\n    for (const tag of event.tags) {\n      let tag2 = tag[0] + \":\" + tag[1];\n      const events = this.eventsByTags.get(tag2);\n      if (events) {\n        events.push(event);\n      } else {\n        this.eventsByTags.set(tag2, [event]);\n      }\n    }\n  }\n\n  addEvent(event: Event) {\n    if (this.getEventById(event.id)) {\n      return;\n    }\n    this.eventsById.set(event.id, event);\n    if (event.kind === Kind.Metadata) {\n      this.metadataByPubKey.set(event.pubkey, event);\n    }\n    if (event.kind === Kind.Contacts) {\n      this.contactsByPubKey.set(event.pubkey, event);\n    }\n    this.#addEventToAuthorKindsByPubKey(event);\n    this.#addEventToEventsByTags(event);\n  }\n\n  getEventById(id: string): Event | undefined {\n    return this.eventsById.get(id);\n  }\n\n  hasEventById(id: string): boolean {\n    return this.eventsById.has(id);\n  }\n\n  #getCachedEventsByPubKeyWithUpdatedFilter(\n    filter: Filter & {\n      relay?: string;\n      noCache?: boolean;\n    }\n  ): {filter: Filter & {relay?: string}; events: Set<Event>} | undefined {\n    if (\n      filter.noCache ||\n      !filter.authors ||\n      !filter.kinds ||\n      filter.kinds.find(\n        (kind) => kind !== Kind.Contacts && kind !== Kind.Metadata\n      ) !== undefined\n    ) {\n      return undefined;\n    }\n    const authors: string[] = [];\n    const events = new Set<Event>();\n    for (const author of filter.authors) {\n      let contactEvent;\n      if (filter.kinds.includes(Kind.Contacts)) {\n        contactEvent = this.contactsByPubKey.get(author);\n        if (!contactEvent) {\n          authors.push(author);\n          continue;\n        }\n      }\n      let metadataEvent;\n      if (filter.kinds.includes(Kind.Metadata)) {\n        metadataEvent = this.metadataByPubKey.get(author);\n        if (!metadataEvent) {\n          authors.push(author);\n          continue;\n        }\n      }\n      if (contactEvent) {\n        events.add(contactEvent);\n      }\n      if (metadataEvent) {\n        events.add(metadataEvent);\n      }\n    }\n    return {filter: {...filter, authors}, events};\n  }\n\n  #getCachedEventsByPubKeyWithUpdatedFilter2(\n    filter: Filter & {\n      relay?: string;\n      noCache?: boolean;\n    }\n  ): {filter: Filter & {relay?: string}; events: Set<Event>} | undefined {\n    if (filter.noCache || !filter.authors) {\n      return undefined;\n    }\n    const events = new Set<Event>();\n    for (const author of filter.authors) {\n      if (filter.kinds) {\n        const kindsByPubKey = this.authorsKindsByPubKey.get(author);\n        if (kindsByPubKey) {\n          for (const kind of filter.kinds) {\n            const events2 = kindsByPubKey.get(kind);\n            if (events2) {\n              for (const event of events2) {\n                events.add(event);\n              }\n            }\n          }\n        }\n      } else {\n        const kindsByPubKey = this.authorsKindsByPubKey.get(author);\n        if (kindsByPubKey) {\n          for (const events2 of kindsByPubKey.values()) {\n            for (const event3 of events2) {\n              events.add(event3);\n            }\n          }\n        }\n      }\n    }\n    return {filter, events};\n  }\n\n  #getCachedEventsByTagsWithUpdatedFilter(\n    filter: Filter & {\n      relay?: string;\n      noCache?: boolean;\n    }\n  ): {filter: Filter & {relay?: string}; events: Set<Event>} | undefined {\n    if (filter.noCache) {\n      return undefined;\n    }\n    const events = new Set<Event>();\n    for (const tag in filter) {\n      if (tag[0] !== \"#\") {\n        continue;\n      }\n      // @ts-ignore\n      let tag2 = tag.slice(1) + \":\" + filter[tag][0];\n      const events2 = this.eventsByTags.get(tag2);\n      if (events2) {\n        for (const event of events2) {\n          events.add(event);\n        }\n      }\n    }\n    return {filter, events};\n  }\n\n  #getCachedEventsByIdWithUpdatedFilter(\n    filter: Filter & {relay?: string; noCache?: boolean}\n  ): {filter: Filter & {relay?: string}; events: Set<Event>} | undefined {\n    if (!filter.ids) {\n      return undefined;\n    }\n\n    const events = new Set<Event>();\n    const ids: string[] = [];\n    for (const id of filter.ids) {\n      const event = this.getEventById(id);\n      if (event) {\n        events.add(event);\n      } else {\n        ids.push(id);\n      }\n    }\n    return {filter: {...filter, ids}, events};\n  }\n\n  getCachedEventsWithUpdatedFilters(\n    filters: (Filter & {relay?: string; noCache?: boolean})[],\n    relays: string[]\n  ): {\n    filters: (Filter & {relay?: string})[];\n    events: Event[];\n  } {\n    const events: Set<Event> = new Set();\n    const new_filters: (Filter & {relay?: string})[] = [];\n    for (const filter of filters) {\n      const new_data = this.#getCachedEventsByIdWithUpdatedFilter(filter) ||\n        // this.#getCachedEventsByPubKeyWithUpdatedFilter(filter) ||\n        this.#getCachedEventsByPubKeyWithUpdatedFilter2(filter) ||\n        this.#getCachedEventsByTagsWithUpdatedFilter(filter) || {\n          filter,\n          events: [],\n        };\n      for (const event of new_data.events) {\n        events.add(event);\n      }\n      new_filters.push(new_data.filter);\n    }\n    return {filters: new_filters, events: [...events]};\n  }\n}\n", "import {Kind, Event} from \"nostr-tools\";\nimport {Author} from \"./author\";\nimport {RelayPool} from \"./relay-pool\";\n\nimport type {OnEvent} from \"./on-event-filters\";\nexport class EventObject implements Event {\n  id: string;\n  kind: Kind;\n  pubkey: string;\n  tags: string[][];\n  created_at: number;\n  content: string;\n  relayPool: RelayPool;\n  relays: string[] | undefined;\n  sig: string;\n\n  constructor(\n    event: Event,\n    relayPool: RelayPool,\n    relays: string[] | undefined\n  ) {\n    this.id = event.id;\n    this.kind = event.kind;\n    this.pubkey = event.pubkey;\n    this.tags = event.tags;\n    this.created_at = event.created_at;\n    this.content = event.content;\n    this.relayPool = relayPool;\n    this.relays = relays;\n    this.sig = event.sig;\n  }\n\n  referencedAuthors(): Author[] {\n    const r: Author[] = [];\n    for (const tag of this.tags) {\n      if (tag[0] === \"p\") {\n        r.push(new Author(this.relayPool, undefined, tag[1]));\n      }\n    }\n    return r;\n  }\n  referencedEvents(maxDelayms: number): Promise<EventObject>[] {\n    const r: Promise<EventObject>[] = [];\n    for (const tag of this.tags) {\n      if (tag[0] === \"e\") {\n        let relays = this.relays;\n        if (tag[2]) {\n          relays = [tag[2], ...(relays || [])];\n        }\n        r.push(\n          this.relayPool\n            // @ts-ignore\n            .getEventById(tag[1], relays, maxDelayms)\n            .then((e) => new EventObject(e, this.relayPool, this.relays))\n        );\n      }\n    }\n    return r;\n  }\n\n  thread(cb: OnEvent, maxDelayms: number): () => void {\n    let relays = this.relays;\n    let ids: string[] = [];\n    for (const tag of this.tags) {\n      if (tag[0] === \"e\") {\n        if (tag[2]) {\n          relays = [tag[2], ...(relays || [])];\n        }\n        ids.push(tag[1]);\n      }\n    }\n\n    return this.relayPool.subscribe(\n      [{ids}, {\"#e\": ids}],\n      relays,\n      cb,\n      maxDelayms\n    );\n  }\n}\n", "import type {OnEvent, OnEventObject, RelayPool} from \"./relay-pool\";\nimport {Filter, Kind} from \"nostr-tools\";\nimport type {EventObject} from \"./event\";\n\nexport class Author {\n  pubkey: string;\n  relayPool: RelayPool;\n  relays: string[] | undefined;\n  constructor(\n    relayPool: RelayPool,\n    relays: string[] | undefined,\n    pubkey: string\n  ) {\n    this.pubkey = pubkey;\n    this.relayPool = relayPool;\n    this.relays = relays;\n  }\n\n  metaData(cb: (event: EventObject) => void, maxDelayms: number): () => void {\n    return this.relayPool.subscribeEventObject(\n      [\n        {\n          authors: [this.pubkey],\n          kinds: [Kind.Metadata],\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n  subscribe(\n    filters: Filter[],\n    cb: OnEventObject,\n    maxDelayms: number\n  ): () => void {\n    return this.relayPool.subscribeEventObject(\n      filters.map((filter) => ({\n        authors: [this.pubkey],\n        ...filter,\n      })),\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n\n  followsPubkeys(\n    cb: (pubkeys: string[]) => void,\n    maxDelayms: number\n  ): () => void {\n    return this.relayPool.subscribeEventObject(\n      [\n        {\n          authors: [this.pubkey],\n          kinds: [Kind.Contacts],\n        },\n      ],\n      this.relays,\n      (event: EventObject) => {\n        let r: string[] = [];\n        for (const tag of event.tags) {\n          if (tag[0] === \"p\") {\n            r.push(tag[1]);\n          }\n        }\n        cb(r);\n      },\n      maxDelayms\n    );\n  }\n\n  // TODO: prioritize relay over other relays for specific authors\n  follows(cb: (authors: Author[]) => void, maxDelayms: number): () => void {\n    return this.relayPool.subscribeEventObject(\n      [\n        {\n          authors: [this.pubkey],\n          kinds: [Kind.Contacts],\n        },\n      ],\n      this.relays,\n      (event: EventObject) => {\n        let r: Author[] = [];\n        for (const tag of event.tags) {\n          if (tag[0] === \"p\") {\n            let relays = this.relays;\n            if (tag[1]) {\n              relays = [tag[1], ...(this.relays || [])];\n            }\n            r.push(new Author(this.relayPool, relays, tag[1]));\n          }\n        }\n        cb(r);\n      },\n      maxDelayms\n    );\n  }\n\n  secondFollows(\n    cb: (pubkeysWithWeight: [string, number][]) => void,\n    maxDelayms: number,\n    removeDirectFollows = true\n  ): () => void {\n    return this.followsPubkeys((pubkeys) => {\n      let sfollows = new Map<string, number>();\n      for (const pubkey of pubkeys) {\n        this.relayPool.subscribeEventObject(\n          [\n            {\n              authors: [pubkey],\n              kinds: [Kind.Contacts],\n            },\n          ],\n          this.relays,\n          (event: EventObject) => {\n            let dweight = 1.0 / event.tags.length;\n            for (const tag of event.tags) {\n              if (tag[0] === \"p\") {\n                let weight = sfollows.get(tag[1]);\n                if (weight) {\n                  weight += dweight;\n                } else {\n                  weight = dweight;\n                }\n                sfollows.set(tag[1], weight);\n              }\n            }\n            if (removeDirectFollows) {\n              for (const pubkey of pubkeys) {\n                sfollows.delete(pubkey);\n              }\n            }\n            cb(Array.from(sfollows.entries()).sort((a, b) => b[1] - a[1]));\n          },\n          maxDelayms\n        );\n      }\n    }, maxDelayms);\n  }\n\n  allEvents(cb: OnEvent, limit = 100, maxDelayms: number): () => void {\n    return this.relayPool.subscribe(\n      [\n        {\n          authors: [this.pubkey],\n          limit,\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n\n  referenced(cb: OnEvent, limit = 100, maxDelayms: number): () => void {\n    return this.relayPool.subscribe(\n      [\n        {\n          \"#p\": [this.pubkey],\n          limit,\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n\n  followers(cb: OnEvent, limit = 100, maxDelayms: number): () => void {\n    return this.relayPool.subscribe(\n      [\n        {\n          \"#p\": [this.pubkey],\n          kinds: [Kind.Contacts],\n          limit,\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n\n  sentAndRecievedDMs(cb: OnEvent, limit = 100, maxDelayms: number): () => void {\n    return this.relayPool.subscribe(\n      [\n        {\n          authors: [this.pubkey],\n          kinds: [Kind.EncryptedDirectMessage],\n          limit,\n        },\n        {\n          \"#p\": [this.pubkey],\n          kinds: [Kind.EncryptedDirectMessage],\n          limit,\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n  text(cb: OnEvent, limit = 100, maxDelayms: number): () => void {\n    return this.relayPool.subscribe(\n      [\n        {\n          authors: [this.pubkey],\n          kinds: [Kind.Text],\n          limit,\n        },\n      ],\n      this.relays,\n      cb,\n      maxDelayms\n    );\n  }\n}\n", "import {Filter, Event} from \"nostr-tools\";\nimport {mergeSimilarAndRemoveEmptyFilters} from \"./merge-similar-filters\";\nimport {\n  doNotEmitDuplicateEvents,\n  doNotEmitOlderEvents,\n  matchOnEventFilters,\n  type OnEvent,\n} from \"./on-event-filters\";\nimport {EventCache} from \"./event-cache\";\nimport {FilterToSubscribe} from \"./relay-pool\";\nimport {CallbackReplayer} from \"./callback-replayer\";\n\nconst unique = (arr: string[]) => [...new Set(arr)];\n\nexport function groupFiltersByRelayAndEmitCacheHits(\n  filters: (Filter & {relay?: string; noCache?: boolean})[],\n  relays: string[],\n  onEvent: OnEvent,\n  options: {\n    allowDuplicateEvents?: boolean;\n    allowOlderEvents?: boolean;\n    logAllEvents?: boolean;\n  } = {},\n  eventCache?: EventCache\n): [OnEvent, Map<string, Filter[]>] {\n  let events: Event[] = [];\n  if (eventCache) {\n    const cachedEventsWithUpdatedFilters =\n      eventCache.getCachedEventsWithUpdatedFilters(filters, relays);\n    filters = cachedEventsWithUpdatedFilters.filters;\n    events = cachedEventsWithUpdatedFilters.events;\n  }\n  if (options.logAllEvents) {\n    const onEventNow = onEvent; // Nasty bug without introducing a new variable\n    onEvent = (event, afterEose, url) => {\n      onEventNow(event, afterEose, url);\n    };\n  }\n  if (!options.allowDuplicateEvents) {\n    onEvent = doNotEmitDuplicateEvents(onEvent);\n  }\n  if (!options.allowOlderEvents) {\n    onEvent = doNotEmitOlderEvents(onEvent);\n  }\n  for (const event of events) {\n    onEvent(event, false, undefined);\n  }\n  filters = mergeSimilarAndRemoveEmptyFilters(filters);\n  onEvent = matchOnEventFilters(onEvent, filters);\n  relays = unique(relays);\n  const filtersByRelay = getFiltersByRelay(filters, relays);\n  return [onEvent, filtersByRelay];\n}\n\nfunction getFiltersByRelay(\n  filters: (Filter & {relay?: string})[],\n  relays: string[]\n): Map<string, Filter[]> {\n  const filtersByRelay = new Map<string, Filter[]>();\n  const filtersWithoutRelay: Filter[] = [];\n  for (const filter of filters) {\n    const relay = filter.relay;\n    if (relay) {\n      const relayFilters = filtersByRelay.get(relay);\n      if (relayFilters) {\n        relayFilters.push(withoutRelay(filter));\n      } else {\n        filtersByRelay.set(relay, [withoutRelay(filter)]);\n      }\n    } else {\n      filtersWithoutRelay.push(filter);\n    }\n  }\n  if (filtersWithoutRelay.length > 0) {\n    for (const relay of relays) {\n      const filters = filtersByRelay.get(relay);\n      if (filters) {\n        filtersByRelay.set(relay, filters.concat(filtersWithoutRelay));\n      } else {\n        filtersByRelay.set(relay, filtersWithoutRelay);\n      }\n    }\n  }\n  return filtersByRelay;\n}\n\nfunction withoutRelay(filter: Filter & {relay?: string}): Filter {\n  filter = {...filter};\n  delete filter.relay;\n  return filter;\n}\n\nexport function batchFiltersByRelay(\n  subscribedFilters: FilterToSubscribe[],\n  subscriptionCache?: Map<\n    string,\n    CallbackReplayer<[Event, boolean, string | undefined], OnEvent>\n  >\n): [OnEvent, Map<string, Filter[]>, {unsubcb?: () => void}] {\n  const filtersByRelay = new Map<string, Filter[]>();\n  const onEvents: OnEvent[] = [];\n  let counter = 0;\n  let unsubOnEoseCounter = 0;\n  let allUnsub = {unsubcb: () => {}, unsuboneosecb: () => {}};\n  let unsubVirtualSubscription = () => {\n    counter--;\n\n    if (counter === 0) {\n      allUnsub.unsubcb();\n    } else if (unsubOnEoseCounter === 0) {\n      allUnsub.unsuboneosecb();\n    }\n  };\n  for (const [\n    onEvent,\n    filtersByRelayBySub,\n    unsub,\n    unsubscribeOnEose,\n    subscriptionCacheKey,\n  ] of subscribedFilters) {\n    if (!unsub.unsubcb) {\n      continue;\n    }\n    for (const [relay, filters] of filtersByRelayBySub) {\n      const filtersByRelayFilters = filtersByRelay.get(relay);\n      if (filtersByRelayFilters) {\n        filtersByRelay.set(relay, filtersByRelayFilters.concat(filters));\n      } else {\n        filtersByRelay.set(relay, filters);\n      }\n    }\n    let onEventWithUnsub: OnEvent = (event, afterEose, url) => {\n      if (unsub.unsubcb) {\n        onEvent(event, afterEose, url);\n      }\n    };\n\n    if (subscriptionCache && subscriptionCacheKey) {\n      const callbackReplayer: CallbackReplayer<\n        [Event, boolean, string | undefined],\n        OnEvent\n      > = new CallbackReplayer(unsubVirtualSubscription);\n      onEvents.push((event, afterEose, url) => {\n        callbackReplayer.event(event, afterEose, url);\n      });\n      let unsubReplayerVirtualSubscription =\n        callbackReplayer.sub(onEventWithUnsub);\n      subscriptionCache.set(subscriptionCacheKey, callbackReplayer);\n      unsub.unsubcb = () => {\n        unsub.unsubcb = undefined;\n        unsubReplayerVirtualSubscription();\n        if (!unsubscribeOnEose) {\n          unsubOnEoseCounter--;\n        }\n      };\n    } else {\n      onEvents.push(onEventWithUnsub);\n      unsub.unsubcb = () => {\n        unsub.unsubcb = undefined;\n        unsubVirtualSubscription();\n        if (!unsubscribeOnEose) {\n          unsubOnEoseCounter--;\n        }\n      };\n    }\n    counter++;\n    if (!unsubscribeOnEose) {\n      unsubOnEoseCounter++;\n    }\n  }\n\n  if (unsubOnEoseCounter === 0) {\n    setTimeout(() => {\n      allUnsub.unsuboneosecb();\n    }, 0);\n  } else {\n    // console.log(\"NO unsuboneosecb for \", subscribedFilters);\n  }\n  const onEvent: OnEvent = (event, afterEose, url) => {\n    for (const onEvent of onEvents) {\n      onEvent(event, afterEose, url);\n    }\n  };\n  subscribedFilters.length = 0;\n  return [onEvent, filtersByRelay, allUnsub];\n}\n", "import {Filter, Kind, matchFilter, Event} from \"nostr-tools\";\nimport {EventObject} from \"./event\";\nexport type OnEventArgs = [\n  event: Event,\n  afterEose: boolean,\n  url: string | undefined\n];\n\nexport type OnEvent = (\n  event: Event,\n  afterEose: boolean,\n  url: string | undefined\n) => void;\n\nexport type OnEventObject = (\n  eventObject: EventObject,\n  afterEose: boolean,\n  url: string | undefined\n) => void;\n\nexport function doNotEmitDuplicateEvents(onEvent: OnEvent): OnEvent {\n  let event_ids = new Set();\n  return (event: Event, afterEose: boolean, url: string | undefined) => {\n    if (event_ids.has(event.id)) return;\n    event_ids.add(event.id);\n    onEvent(event, afterEose, url);\n  };\n}\n\nexport function doNotEmitOlderEvents(onEvent: OnEvent): OnEvent {\n  let created_at_by_events_kinds = new Map();\n  return (event: Event, afterEose: boolean, url: string | undefined) => {\n    if (event.kind === Kind.Metadata || event.kind === Kind.Contacts) {\n      let event_kind = event.pubkey + \" \" + event.kind;\n      if ((created_at_by_events_kinds.get(event_kind) || 0) > event.created_at)\n        return;\n      created_at_by_events_kinds.set(event_kind, event.created_at);\n    }\n    onEvent(event, afterEose, url);\n  };\n}\n\nexport function matchOnEventFilters(\n  onEvent: OnEvent,\n  filters: Filter[]\n): OnEvent {\n  return (event: Event, afterEose: boolean, url: string | undefined) => {\n    for (let filter of filters) {\n      if (matchFilter(filter, event)) {\n        onEvent(event, afterEose, url);\n        break;\n      }\n    }\n  };\n}\n\nexport function emitEventsOnNextTick(onEvent: OnEvent): OnEvent {\n  return (event: Event, afterEose: boolean, url: string | undefined) => {\n    setTimeout(() => {\n      onEvent(event, afterEose, url);\n    }, 0);\n  };\n}\n", "// Cancellable<OnEvent> is perfect for this.\nexport type Cancellable<Process> = (process: Process) => () => void;\nexport type Callback<Args extends any[]> = (...args: Args) => void;\n\nexport class CancellableCallbackReplayer<Args extends any[]> {\n  events: Args[] = [];\n  unsubAll?: () => void;\n  subs: Set<Callback<Args>> = new Set();\n  constructor(cancellableCallback: Cancellable<Callback<Args>>) {\n    this.unsubAll = cancellableCallback((...args: Args) => {\n      this.events.push(args);\n      for (let sub of this.subs) {\n        sub(...args);\n      }\n    });\n  }\n  sub(): Cancellable<Callback<Args>> {\n    return (callback: Callback<Args>) => {\n      this.subs.add(callback);\n      this.events.forEach((arg) => callback(...arg));\n      return () => {\n        this.subs.delete(callback);\n        if (this.subs.size === 0) {\n          this.unsubAll?.();\n          this.unsubAll = undefined;\n        }\n      };\n    };\n  }\n}\nexport class CallbackReplayer<\n  Args extends any[],\n  T extends (...args: Args) => void\n> {\n  subs: T[] = [];\n  events: Args[] = [];\n  onunsub: (() => void) | undefined;\n\n  constructor(onunsub: (() => void) | undefined) {\n    this.onunsub = onunsub;\n  }\n\n  event(...args: Args) {\n    this.events.push(args);\n    this.subs.forEach((sub) => sub(...args));\n  }\n\n  sub(callback: T) {\n    this.events.forEach((event) => callback(...event));\n    this.subs.push(callback);\n    return () => {\n      this.subs = this.subs.filter((sub) => sub !== callback);\n      if (this.subs.length === 0) {\n        this.onunsub?.();\n        this.onunsub = undefined;\n      }\n    };\n  }\n}\n", "import {Event, Filter} from \"nostr-tools\";\nimport {RelayPool} from \"./relay-pool\";\n\nexport class NewestEventCache {\n  data: Map<string, Event>;\n  promises: Map<string, Promise<Event>>;\n  relays: string[];\n  kind: number;\n  relayPool: RelayPool;\n  useps: boolean;\n  constructor(\n    kind: number,\n    relayPool: RelayPool,\n    relays?: string[],\n    useps?: boolean\n  ) {\n    this.data = new Map();\n    this.promises = new Map();\n    this.kind = kind;\n    this.relayPool = relayPool;\n    this.relays = relays || [\"wss://us.rbr.bio\", \"wss://eu.rbr.bio\"];\n    this.useps = useps || false;\n  }\n\n  async get(pubkey: string): Promise<Event> {\n    let value = this.data.get(pubkey);\n    if (value) {\n      return Promise.resolve(value);\n    }\n    const promise = this.promises.get(pubkey);\n    if (promise) {\n      return promise;\n    }\n    return new Promise((resolve, reject) => {\n      let tries = 0;\n      const filter: Filter = this.useps\n        ? {kinds: [this.kind], \"#p\": [pubkey]}\n        : {kinds: [this.kind], authors: [pubkey]};\n      this.relayPool.subscribe(\n        [filter],\n        this.relays,\n        (event) => {\n          this.data.set(pubkey, event);\n          this.promises.delete(pubkey);\n          resolve(event);\n        },\n        undefined,\n        (relayUrl) => {\n          if (this.relays.includes(relayUrl)) {\n            tries++;\n          }\n          if (tries === this.relays.length) {\n            this.promises.delete(pubkey);\n            reject(\n              `Can't find data2 for ${pubkey} with kind ${\n                this.kind\n              } on RelayInfoServers ${this.relays.join(\",\")}, ${tries} tries`\n            );\n          }\n        }\n      );\n    });\n  }\n}\n", "import {Event} from \"nostr-tools\";\nimport {OnEvent} from \"./on-event-filters\";\n\nconst binarySearch = function (a: Event[], target: Event) {\n  var l = 0,\n    h = a.length - 1,\n    m,\n    comparison;\n  let comparator = function (a: Event, b: Event) {\n    return a.created_at - b.created_at;\n  };\n  while (l <= h) {\n    m = (l + h) >>> 1; /* equivalent to Math.floor((l + h) / 2) but faster */\n    comparison = comparator(a[m], target);\n    if (comparison < 0) {\n      l = m + 1;\n    } else if (comparison > 0) {\n      h = m - 1;\n    } else {\n      return m;\n    }\n  }\n  return ~l;\n};\n\nconst binaryInsert = function (a: Event[], target: Event) {\n  const duplicate = true; // it's OK to have the same created_at multiple times\n  var i = binarySearch(a, target);\n  if (i >= 0) {\n    /* if the binarySearch return value was zero or positive, a matching object was found */\n    if (!duplicate) {\n      return i;\n    }\n  } else {\n    /* if the return value was negative, the bitwise complement of the return value is the correct index for this object */\n    i = ~i;\n  }\n  a.splice(i, 0, target);\n  return i;\n};\n\nexport function collect(\n  onEvents: (events: Event[]) => void,\n  skipSort: boolean = false\n): OnEvent {\n  let events: Event[] = [];\n  return (event: Event, afterEose: boolean, url: string | undefined) => {\n    if (skipSort) {\n      events.push(event);\n    } else {\n      binaryInsert(events, event);\n    }\n    onEvents(events);\n  };\n}\n"],
  "mappings": "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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A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",
  "names": ["module", "stringify", "configure", "charCode", "number", "value", "join", "tmp", "key", "res", "number", "bool", "bytes", "hash", "exists", "output", "assert", "createView", "rotr", "hexes", "bytesToHex", "hex", "hexToBytes", "nextTick", "utf8ToBytes", "toBytes", "concatBytes", "Hash", "wrapConstructor", "randomBytes", "HMAC", "hash", "hmac", "hash", "i", "setBigUint64", "isLE", "_32n", "SHA2", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA224", "U32_MASK64", "_32n", "fromBig", "split", "toBig", "shrSH", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "add3L", "add3H", "add4L", "add4H", "add5L", "add5H", "u64", "SHA512_Kh", "SHA512_Kl", "SHA512_W_H", "SHA512_W_L", "SHA512", "SHA512_224", "SHA512_256", "SHA384", "assertNumber", "chain", "decode", "alphabet", "join", "padding", "normalize", "convertRadix", "gcd", "radix2carry", "convertRadix2", "radix", "bytes", "radix2", "unsafeWrapper", "checksum", "genBase58", "XMR_BLOCK_LEN", "base58check", "sha256", "BECH_ALPHABET", "POLYMOD_GENERATORS", "bech32Polymod", "bechChecksum", "genBech32", "_words", "CODERS", "coderTypeError", "wordlist", "normalize", "generateMnemonic", "validateMnemonic", "mnemonicToSeedSync", "cjsModule", "d", "window", "f", "bytes", "hex", "number", "gcd", "hash", "hashLen", "bytes", "hex", "bytes", "crypto", "hash", "randomBytes", "crypto", "hexes", "hash", "crypto", "isLE", "_32n", "assertNumber", "decode", "alphabet", "padding", "bytes", "checksum", "sha256", "decode", "_words", "hash", "crypto", "createView", "rotr", "isLE", "hexes", "bytesToHex", "hex", "hexToBytes", "utf8ToBytes", "toBytes", "concatBytes", "Hash", "wrapConstructor", "toBytes", "Hash", "hash", "toBytes", "setBigUint64", "isLE", "_32n", "SHA2", "Hash", "createView", "toBytes", "SHA2", "wrapConstructor", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "rotr", "sha256", "wrapConstructor", "SHA2", "wrapConstructor", "sha256", "base58check", "bytesToNumber", "bytes", "bytesToHex", "hexToBytes", "utf8ToBytes", "createView", "concatBytes", "hash", "HMAC", "hash", "hmac", "__defProp", "__export", "getPublicKey", "__export", "f", "__export", "__export", "hex", "__export", "getPublicKey", "hmac", "getHex64", "getHex64", "event", "id", "ws", "pubkey", "filters", "onEvent", "unique", "a"]
}
